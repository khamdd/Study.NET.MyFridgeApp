// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFridgeApp.Data;

#nullable disable

namespace MyFridgeApp.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20251006025840_AddInitData")]
    partial class AddInitData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyFridgeApp.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("MyFridgeApp.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("MyFridgeApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All kinds of meat products",
                            Name = "Meat"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fish, prawns, and other seafood",
                            Name = "Seafood"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fresh fruits",
                            Name = "Fruit"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Fresh vegetables",
                            Name = "Vegetable"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Milk, cheese, yogurt, and dairy products",
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All types of eggs",
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Juices, soft drinks, and other beverages",
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Sauces, condiments, and dressings",
                            Name = "Sauces"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Bread, cakes, and other baked goods",
                            Name = "Bakery"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Items not covered by other categories",
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MyFridgeApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ExpiryDate = new DateTime(2025, 10, 11, 13, 58, 37, 778, DateTimeKind.Local).AddTicks(9845),
                            ImportDate = new DateTime(2025, 10, 4, 13, 58, 37, 777, DateTimeKind.Local).AddTicks(5136),
                            Name = "Beef Steak",
                            Notes = "Grass-fed beef",
                            Quantity = 2,
                            Status = 0,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ExpiryDate = new DateTime(2025, 10, 10, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(456),
                            ImportDate = new DateTime(2025, 10, 5, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(452),
                            Name = "Pork Chops",
                            Notes = "",
                            Quantity = 6,
                            Status = 0,
                            Unit = "pieces"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ExpiryDate = new DateTime(2025, 10, 9, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(460),
                            ImportDate = new DateTime(2025, 10, 3, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(459),
                            Name = "Salmon Fillet",
                            Notes = "Fresh Atlantic salmon",
                            Quantity = 1,
                            Status = 0,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            ExpiryDate = new DateTime(2025, 10, 8, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(464),
                            ImportDate = new DateTime(2025, 10, 5, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(463),
                            Name = "Prawns",
                            Notes = "Frozen prawns",
                            Quantity = 500,
                            Status = 0,
                            Unit = "g"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            ExpiryDate = new DateTime(2025, 10, 16, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(509),
                            ImportDate = new DateTime(2025, 10, 1, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(508),
                            Name = "Apples",
                            Notes = "",
                            Quantity = 6,
                            Status = 0,
                            Unit = "pieces"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            ExpiryDate = new DateTime(2025, 10, 9, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(513),
                            ImportDate = new DateTime(2025, 10, 4, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(512),
                            Name = "Bananas",
                            Notes = "Ripe",
                            Quantity = 4,
                            Status = 0,
                            Unit = "pieces"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            ExpiryDate = new DateTime(2025, 10, 13, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(516),
                            ImportDate = new DateTime(2025, 10, 5, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(515),
                            Name = "Grapes",
                            Notes = "Seedless",
                            Quantity = 1,
                            Status = 0,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            ExpiryDate = new DateTime(2025, 10, 18, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(519),
                            ImportDate = new DateTime(2025, 10, 3, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(518),
                            Name = "Carrots",
                            Notes = "",
                            Quantity = 1,
                            Status = 0,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            ExpiryDate = new DateTime(2025, 10, 11, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(536),
                            ImportDate = new DateTime(2025, 10, 4, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(535),
                            Name = "Broccoli",
                            Notes = "Organic",
                            Quantity = 2,
                            Status = 0,
                            Unit = "pieces"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            ExpiryDate = new DateTime(2025, 10, 12, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(539),
                            ImportDate = new DateTime(2025, 10, 5, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(538),
                            Name = "Milk",
                            Notes = "Low-fat",
                            Quantity = 2,
                            Status = 0,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 5,
                            ExpiryDate = new DateTime(2025, 10, 26, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(542),
                            ImportDate = new DateTime(2025, 10, 2, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(541),
                            Name = "Cheddar Cheese",
                            Notes = "Block",
                            Quantity = 200,
                            Status = 0,
                            Unit = "g"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 6,
                            ExpiryDate = new DateTime(2025, 10, 18, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(546),
                            ImportDate = new DateTime(2025, 9, 30, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(545),
                            Name = "Chicken Eggs",
                            Notes = "Free-range",
                            Quantity = 12,
                            Status = 0,
                            Unit = "pieces"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 6,
                            ExpiryDate = new DateTime(2025, 10, 16, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(549),
                            ImportDate = new DateTime(2025, 10, 4, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(547),
                            Name = "Duck Eggs",
                            Notes = "",
                            Quantity = 6,
                            Status = 0,
                            Unit = "pieces"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 7,
                            ExpiryDate = new DateTime(2025, 10, 13, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(552),
                            ImportDate = new DateTime(2025, 10, 5, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(551),
                            Name = "Orange Juice",
                            Notes = "Freshly squeezed",
                            Quantity = 1,
                            Status = 0,
                            Unit = "liter"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 7,
                            ExpiryDate = new DateTime(2026, 4, 6, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(555),
                            ImportDate = new DateTime(2025, 10, 1, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(554),
                            Name = "Coca-Cola",
                            Notes = "",
                            Quantity = 6,
                            Status = 0,
                            Unit = "cans"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 8,
                            ExpiryDate = new DateTime(2026, 10, 6, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(576),
                            ImportDate = new DateTime(2025, 9, 6, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(575),
                            Name = "Tomato Ketchup",
                            Notes = "Big size",
                            Quantity = 1,
                            Status = 0,
                            Unit = "bottle"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 8,
                            ExpiryDate = new DateTime(2027, 4, 6, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(580),
                            ImportDate = new DateTime(2025, 8, 7, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(579),
                            Name = "Soy Sauce",
                            Notes = "Japanese style",
                            Quantity = 1,
                            Status = 0,
                            Unit = "bottle"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 9,
                            ExpiryDate = new DateTime(2025, 10, 9, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(583),
                            ImportDate = new DateTime(2025, 10, 5, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(582),
                            Name = "Whole Wheat Bread",
                            Notes = "",
                            Quantity = 1,
                            Status = 0,
                            Unit = "loaf"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 9,
                            ExpiryDate = new DateTime(2025, 10, 8, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(586),
                            ImportDate = new DateTime(2025, 10, 6, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(585),
                            Name = "Chocolate Cake",
                            Notes = "Birthday cake",
                            Quantity = 1,
                            Status = 0,
                            Unit = "piece"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 10,
                            ExpiryDate = new DateTime(2025, 10, 26, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(589),
                            ImportDate = new DateTime(2025, 9, 26, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(588),
                            Name = "Butter",
                            Notes = "Salted",
                            Quantity = 250,
                            Status = 0,
                            Unit = "g"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 10,
                            ExpiryDate = new DateTime(2026, 4, 6, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(592),
                            ImportDate = new DateTime(2025, 9, 21, 13, 58, 37, 779, DateTimeKind.Local).AddTicks(591),
                            Name = "Pickles",
                            Notes = "Homemade",
                            Quantity = 1,
                            Status = 0,
                            Unit = "jar"
                        });
                });

            modelBuilder.Entity("MyFridgeApp.Models.CartItem", b =>
                {
                    b.HasOne("MyFridgeApp.Models.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFridgeApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFridgeApp.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cart");

                    b.Navigation("Category");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyFridgeApp.Models.Item", b =>
                {
                    b.HasOne("MyFridgeApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyFridgeApp.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
